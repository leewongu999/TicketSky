<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 어노테이션을 찾게 하는 태그 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resource에 있는 경로를 매핑시켜주는 태그 -->
	<!-- resource에 img, css등 파일 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- controller에서 return 되어오는 문자열에 prefix값과 suffix값을 앞 뒤에 붙여주는 기능을 하는 태그 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!--객체를 찾을 최상위 경로를 설정  -->
	<context:component-scan base-package="com.kh.ticketsky" />
	<!-- interceptor 처리 -->
	
	<!-- interceptor 처리부분 쓸사람 알아서 !!  -->
	<interceptors>
		<interceptor>
			<!-- 매핑 path를 잘 선택해줘야함. 
			servlet 어노테이션 경로만 적어 두면 됨.  -->
			<mapping path="/user/*"/>
			<exclude-mapping path="/user/login"/>
			<exclude-mapping path="/user/memberLogin.do"/>
			<exclude-mapping path="/user/forgetPassword"/>
			<exclude-mapping path="/user/*Enroll"/>
			<exclude-mapping path="/user/*EnrollEnd"/>
			<exclude-mapping path="/user/checkDuplicate.do"/>
			<beans:bean id="loginCheckInterceptor" class="com.kh.ticketsky.common.interceptor.LogginCheckInterceptor">
			</beans:bean>
		</interceptor>
	</interceptors>
	
	<!--파일업로드 처리 객체 등록  -->
	<beans:bean id='multipartResolver' class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value='10485760'>
		</beans:property>
	</beans:bean>
	
	<!-- json View등록 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<!--value가 1번이면 가장 먼저 실행해라 interal방식?? 보다 먼저 실행하라고 value 1 준듯?  -->
		<beans:property name="order" value='1'/> 
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<!-- 3.대 버전 jackson-->
	<!-- <beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></beans:bean> -->
	
	<!--  5.대버전 jackson -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
</beans:beans>

